/*
 * PassportPDF API
 *
 * Another brick in the cloud
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi
// ImageFilterParameters Represents the parameters for an image filtering action.
type ImageFilterParameters struct {
	// The identifier of the previously uploaded file to be processed.
	FileId string `json:"FileId"`
	// Specifies the number of the page, or the range of pages to apply the filter(s) to.
	PageRange string `json:"PageRange"`
	// Specifies an array of filters to be applied.  A maximum of 5 entries is supported.
	Filters []ImageFilters `json:"Filters"`
	// Specifies the left coordinate, in pixel, of the region to process.
	RoiLeft int32 `json:"RoiLeft,omitempty"`
	// Specifies the top coordinate, in pixel, of the region to process.
	RoiTop int32 `json:"RoiTop,omitempty"`
	// Specifies the width, in pixel, of the region to process. 0 causes the entire image to be processed.
	RoiWidth int32 `json:"RoiWidth,omitempty"`
	// Specifies the height, in pixel, of the region to process. 0 causes the entire image to be processed.
	RoiHeight int32 `json:"RoiHeight,omitempty"`
	// Specifies the kernel size for the Gaussian filter (if enabled). The size of the square kernel to use. Should be a odd value. For example, a size of 3 will involve 3 * 3 pixels in each pass. The larger the value the more blur you get. The range is larger or equal than 3, and less than the Image's Smaller Dimension (Width, Height) divided by 2. Suggested value is 3 for a [96-120] DPI image and 5 for a [200-250] dpi bitmap.
	GaussianKernelSize int32 `json:"GaussianKernelSize,omitempty"`
	// Size of Edges to become after the unsharp mask effect is applied. It controls how wide they get after the filter is applied. Radius and Amount interact, reducing one, allows more of the other. Minimum Value of Radius should be 3 or more to allow for enough pixels surrounding the edge to be investigated. If value passed less than 3 is passed it will be ammended automatically to 3. Proper value is 5. Value >= 3.
	UnsharpMaskRadius int32 `json:"UnsharpMaskRadius,omitempty"`
	// Amount of Contrast to be added to areas of edges where filter will be applies. It controls how much darker and how much brighter the edges become. Proper value is 0.5, Value between 0.0-5.0.
	UnsharpMaskAmount float64 `json:"UnsharpMaskAmount,omitempty"`
	// Specifies the amount of edges to be sharpened. Smaller values sharpen more, higher values exclude the subtle edges from being sharpened. Proper value is 40. Value between 0-255.
	UnsharpMaskThreshold int32 `json:"UnsharpMaskThreshold,omitempty"`
	// Size of ball rolled under the image. Controlled the amount of subtraction. Value >= 50.
	SubtractBackgroundRollingBallSize int32 `json:"SubtractBackgroundRollingBallSize,omitempty"`
	// Whether a background is lighter or not than the foreground.Value >= true.
	SubtractBackgroundLightBackground bool `json:"SubtractBackgroundLightBackground,omitempty"`
	// Specifies the kernel size for the median filter (if enabled). Level corresponding to number of pixels to include in the median operation, where Level = n, corresponds to (n*2+1)^2 pixels to be included. For Example, KernelSize = 1 includes 9 pixels in the median operation, KernelSize = 2 includes 25 pixels in the median operation. Range from 1 to 60.
	MedianKernelSize int32 `json:"MedianKernelSize,omitempty"`
	// Specifies the kernel size for the minimum filter (if enabled). How large should objects grow in each direction of the four directions, left, right, top, and bottom This value should be larger than 1 and smaller than Image's Smaller Dimension (Width or Height) divided by 2.
	MinKernelSize int32 `json:"MinKernelSize,omitempty"`
	// Specifies the kernel size for the maximum filter (if enabled). How much smaller should objects become in each direction of the four directions, left, right, top, and bottom. This value should be larger than 1 and smaller than Image's Smaller Dimension (Width or Height) divided by 2.
	MaxKernelSize int32 `json:"MaxKernelSize,omitempty"`
	// Specifies the value for the soften filter (if enabled). Factor between 1 and 100.
	SoftenValue int32 `json:"SoftenValue,omitempty"`
	// Hue for the colorization effect (if enabled) [0..100].
	ColorizeHue float32 `json:"ColorizeHue,omitempty"`
	// Saturation for the colorization effect (if enabled) [0..100].
	ColorizeSaturation float32 `json:"ColorizeSaturation,omitempty"`
	// Luminosity for the colorization effect  (if enabled) [0..100].
	ColorizeLuminosity float32 `json:"ColorizeLuminosity,omitempty"`
}
